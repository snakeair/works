@charset "utf-8" ;
//IE Low version
$legacy-support-for-ie : true !default;

//inline-block
@mixin inline-block{
  display: inline-block;
  @if $legacy-support-for-ie {
    *vertical-align: auto;
    zoom: 1;
    *display: inline;
  }
}

//border
@mixin border($style , $radius ){
    border: $style;
    @if $radius != 0 {
        border-radius:$radius;
    }
}
@mixin border($vert, $style ){
    border-#{$vert}: $style;
}

//font
@mixin font($size , $color , $line-height: 1){
    font-size: $size; color: $color ; line-height: $line-height; 
}

//opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: ($opacity * 100);
  filter: alpha(opacity=$opacity-ie);
}

//float
@mixin float ($float:left){
  @if $float == left {
    float: left;
  } @else {
    float: right;
  }
}

//clearFloat
@mixin clearfix {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
        overflow: hidden;
    }
}

//input_box
@mixin input_size( $input-height, $padding-vertical, $padding-horizontal, $font-size, $line-height, $border-radius)  {
    height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border-radius: $border-radius;
  }

//select_box
@mixin select_size ( $input-height ,$padding-vertical, $padding-horizontal , $font-size, $line-height, $border-radius){
    height: $input-height;
    line-height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    border-radius: $border-radius;
  }

//position
@mixin position($position, $args) {
    position: $position;

  @each $o in top right bottom left margin-top margin-bottom margin-left margin-right {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
        #{$o}: nth($args, $i + 1);
    }
  }
}
@mixin absolute($args) { //绝对定位
    @include position(absolute, $args);
}
@mixin fixed($args) {  // 悬浮效果
    @include position(fixed, $args);
}
@mixin relative($args) {   // 相对定位
    @include position(relative, $args);
}
@mixin centre($args , $width , $height){  // 居中显示
    @include position(fixed , $args);
    margin-left:-($width / 2); margin-top:-($height / 2)
}

//box
@mixin box($width , $height , $args){
    width : $width ; height: $height;
    @each $o in padding-top padding-right padding-bottom padding-left padding margin-top margin-bottom margin-left margin-right margin {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
        #{$o}: nth($args, $i + 1);
    }
  }
}

//center_box
@mixin center_box($extend:true){
  @if $extend {
    margin-left:auto; margin-right:auto;
  }
}


//linkColor and :hover
@mixin link($color , $bg:none , $hover-color:$color , $hover-bg:$bg , $hover:false){
    color: $color; background-color: $bg;
    @if $hover {
        &:hover{
            color:$color; background-color: $hover-bg;
        }
    }
}










.main{
    @include float();
}



