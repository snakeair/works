@charset "utf-8" ;
//IE Low version
$legacy-support-for-ie : true !default;
$border-style: 1px solid ;


//inline-block
@mixin inline-block{
    display: inline-block;
    @if $legacy-support-for-ie {
        *vertical-align: auto;
        zoom: 1;
        *display: inline;
    }
}


//border
@mixin border($style , $radius:0){
    border:$border-style $style;
    @if $radius != 0 {
        border-radius:$radius;
    }
}

//font
@mixin font($size , $color , $line-height: 1){
    font-size: $size; color: $color ; line-height: $line-height; 
}

//opacity
@mixin opacity($opacity) {
    opacity: $opacity;
    $opacity-ie: ($opacity * 100);
    filter: alpha(opacity=$opacity-ie);
}

//float
@mixin float ($float:left){
    @if $float == left {
      float: left;
    } @else {
      float: right;
    }
}

//clearFloat
@mixin clearfix {
    @if $legacy-support-for-ie {
        *zoom: 1;
    }
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

//input_box
@mixin input_box( $width, $height, $padding-vertical, $padding-horizontal, $font-size,  $border, $line-height:$height, $border-radius:0 )  {
    width : $width;
    height: $height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    line-height: $line-height;
    border: 1px solid $border;
    border-radius: $border-radius;
}

//select_box
@mixin select_box ( $input-height ,$padding-vertical, $padding-horizontal , $font-size, $line-height, $border , $border-radius:0){
    height: $input-height;
    line-height: $input-height;
    padding: $padding-vertical $padding-horizontal;
    font-size: $font-size;
    border:1px solid $border;
    border-radius: $border-radius;
  }

//position
@mixin position($position, $args) {
    position: $position;
    @each $o in top right bottom left margin-top margin-bottom margin-left margin-right {
        $i: index($args, $o);
        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
            #{$o}: nth($args, $i + 1);
        }
    }
}
@mixin absolute($args) { //绝对定位
    @include position(absolute, $args);
}
@mixin fixed($args) {  // 悬浮效果
    @include position(fixed, $args);
}
@mixin relative($args) {   // 相对定位
    @include position(relative, $args);
}
@mixin alert($width , $height , $args:0 ){  // 居中显示
    @include position(fixed , $args);
    margin-left:-($width / 2); margin-top:-($height / 2)
}

//box
@mixin box($width , $height , $padding:0 , $margin:0 ){
    width : $width ; height: $height;  padding: $padding; margin: $margin;
}

//center_box
@mixin center_box($extend:true){
  @if $extend {
    margin-left:auto; margin-right:auto;
  }
}

//linkColor and :hover
@mixin link($color ,$hover-color:$color ,$hover:false){
    color: $color; 
    @if $hover {
        &:hover{
            color:$color;
        }
    }
}

//imgCenter
@mixin img_center($father:false){
    @if $father {
        display: table; text-align: center;
    } @else {
        display: table-cell; vertical-align: middle;
    }
}

@mixin btn($width , $height, $bg , $color ,  $size , $hover:false , $hover-bg:$bg , $hover-color:$color ,  $line-height: $height){
  @include inline-block;
  width:$width; height: $height;  background-color:$bg; color :$color; text-align: center; line-height: $line-height; font-size: $size;
  @if $hover{
    &:hover{
      background-color: $hover-bg; color:$hover-color; 
    }
  }
}
@mixin btn_box( $width , $height , $padding){
  width:$width; height: $height; 
  @if $padding != 0{
    padding : $padding;
  }
}


.main {
  @include border(#ccc);
}





